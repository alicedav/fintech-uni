{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/alicedav/fintech-uni-module-polynomial-prediction-model?scriptVersionId=221835411\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","id":"a98fc0a2","metadata":{"papermill":{"duration":0.004392,"end_time":"2025-02-10T17:23:34.303374","exception":false,"start_time":"2025-02-10T17:23:34.298982","status":"completed"},"tags":[]},"source":["* Module Name: Financial Technology\n","* Task Title: A simple machine learning-based prediction model\n","* Dataset: FTSE 100 Historical Data.csv"]},{"cell_type":"markdown","id":"1e9dd36e","metadata":{"papermill":{"duration":0.003692,"end_time":"2025-02-10T17:23:34.311884","exception":false,"start_time":"2025-02-10T17:23:34.308192","status":"completed"},"tags":[]},"source":["# A Simple Polynomial Machine Learning-Based Prediction Model"]},{"cell_type":"code","execution_count":1,"id":"ec63ba11","metadata":{"execution":{"iopub.execute_input":"2025-02-10T17:23:34.321261Z","iopub.status.busy":"2025-02-10T17:23:34.320867Z","iopub.status.idle":"2025-02-10T17:23:36.732199Z","shell.execute_reply":"2025-02-10T17:23:36.731098Z"},"papermill":{"duration":2.419025,"end_time":"2025-02-10T17:23:36.734674","exception":false,"start_time":"2025-02-10T17:23:34.315649","status":"completed"},"tags":[]},"outputs":[],"source":["# Import packages used by this programme\n","import numpy as np\n","import pandas as pd\n","#import seaborn as sns\n","import matplotlib.pyplot as plt\n","from sklearn.linear_model import LinearRegression\n","from sklearn.preprocessing import PolynomialFeatures\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import mean_absolute_error,mean_squared_error"]},{"cell_type":"code","execution_count":2,"id":"a9896ac9","metadata":{"execution":{"iopub.execute_input":"2025-02-10T17:23:36.750294Z","iopub.status.busy":"2025-02-10T17:23:36.749759Z","iopub.status.idle":"2025-02-10T17:23:36.878837Z","shell.execute_reply":"2025-02-10T17:23:36.877352Z"},"papermill":{"duration":0.141553,"end_time":"2025-02-10T17:23:36.882185","exception":false,"start_time":"2025-02-10T17:23:36.740632","status":"completed"},"tags":[]},"outputs":[],"source":["# Upload csv file of historical price of FTSE100, import it into workspace, and read it as dataframe (df)\n","df = pd.read_csv('/kaggle/input/ftse-100-historical-data/FTSE 100 Historical Data (1).csv', thousands = ',') #read data from csv file"]},{"cell_type":"code","execution_count":3,"id":"3ba37ace","metadata":{"execution":{"iopub.execute_input":"2025-02-10T17:23:36.896083Z","iopub.status.busy":"2025-02-10T17:23:36.895143Z","iopub.status.idle":"2025-02-10T17:23:36.927127Z","shell.execute_reply":"2025-02-10T17:23:36.925843Z"},"papermill":{"duration":0.039963,"end_time":"2025-02-10T17:23:36.929504","exception":false,"start_time":"2025-02-10T17:23:36.889541","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Price</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Vol.</th>\n","      <th>Change %</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>05/12/2023</td>\n","      <td>7479.16</td>\n","      <td>7469.04</td>\n","      <td>7500.96</td>\n","      <td>7459.69</td>\n","      <td>NaN</td>\n","      <td>-0.45%</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>04/12/2023</td>\n","      <td>7512.96</td>\n","      <td>7529.35</td>\n","      <td>7533.81</td>\n","      <td>7476.85</td>\n","      <td>818.38M</td>\n","      <td>-0.22%</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>01/12/2023</td>\n","      <td>7529.35</td>\n","      <td>7453.75</td>\n","      <td>7538.71</td>\n","      <td>7453.75</td>\n","      <td>549.09M</td>\n","      <td>1.01%</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>30/11/2023</td>\n","      <td>7453.75</td>\n","      <td>7423.46</td>\n","      <td>7497.68</td>\n","      <td>7387.09</td>\n","      <td>1.27B</td>\n","      <td>0.41%</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>29/11/2023</td>\n","      <td>7423.46</td>\n","      <td>7455.24</td>\n","      <td>7457.48</td>\n","      <td>7408.79</td>\n","      <td>531.53M</td>\n","      <td>-0.43%</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>28/11/2023</td>\n","      <td>7455.24</td>\n","      <td>7460.70</td>\n","      <td>7461.13</td>\n","      <td>7403.25</td>\n","      <td>599.93M</td>\n","      <td>-0.07%</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>27/11/2023</td>\n","      <td>7460.70</td>\n","      <td>7488.20</td>\n","      <td>7488.26</td>\n","      <td>7452.18</td>\n","      <td>398.90M</td>\n","      <td>-0.37%</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>24/11/2023</td>\n","      <td>7488.20</td>\n","      <td>7483.58</td>\n","      <td>7494.72</td>\n","      <td>7450.12</td>\n","      <td>528.51M</td>\n","      <td>0.06%</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>23/11/2023</td>\n","      <td>7483.58</td>\n","      <td>7469.51</td>\n","      <td>7494.77</td>\n","      <td>7450.60</td>\n","      <td>607.42M</td>\n","      <td>0.19%</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>22/11/2023</td>\n","      <td>7469.51</td>\n","      <td>7481.99</td>\n","      <td>7504.51</td>\n","      <td>7452.00</td>\n","      <td>627.38M</td>\n","      <td>-0.17%</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         Date    Price     Open     High      Low     Vol. Change %\n","0  05/12/2023  7479.16  7469.04  7500.96  7459.69      NaN   -0.45%\n","1  04/12/2023  7512.96  7529.35  7533.81  7476.85  818.38M   -0.22%\n","2  01/12/2023  7529.35  7453.75  7538.71  7453.75  549.09M    1.01%\n","3  30/11/2023  7453.75  7423.46  7497.68  7387.09    1.27B    0.41%\n","4  29/11/2023  7423.46  7455.24  7457.48  7408.79  531.53M   -0.43%\n","5  28/11/2023  7455.24  7460.70  7461.13  7403.25  599.93M   -0.07%\n","6  27/11/2023  7460.70  7488.20  7488.26  7452.18  398.90M   -0.37%\n","7  24/11/2023  7488.20  7483.58  7494.72  7450.12  528.51M    0.06%\n","8  23/11/2023  7483.58  7469.51  7494.77  7450.60  607.42M    0.19%\n","9  22/11/2023  7469.51  7481.99  7504.51  7452.00  627.38M   -0.17%"]},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":["# Check how df looks by reading the first 10 rows\n","df.head(10)"]},{"cell_type":"code","execution_count":4,"id":"fa8ca14a","metadata":{"execution":{"iopub.execute_input":"2025-02-10T17:23:36.939604Z","iopub.status.busy":"2025-02-10T17:23:36.939264Z","iopub.status.idle":"2025-02-10T17:23:36.961989Z","shell.execute_reply":"2025-02-10T17:23:36.960822Z"},"papermill":{"duration":0.030663,"end_time":"2025-02-10T17:23:36.964633","exception":false,"start_time":"2025-02-10T17:23:36.93397","status":"completed"},"tags":[]},"outputs":[],"source":["# Remove duplicated rows\n","unique_rows = df.drop_duplicates()\n","# Remove any rows which contain missing values\n","input = unique_rows.dropna(axis=0)"]},{"cell_type":"code","execution_count":5,"id":"a69d7c26","metadata":{"execution":{"iopub.execute_input":"2025-02-10T17:23:36.9747Z","iopub.status.busy":"2025-02-10T17:23:36.974349Z","iopub.status.idle":"2025-02-10T17:23:36.982562Z","shell.execute_reply":"2025-02-10T17:23:36.981353Z"},"papermill":{"duration":0.016748,"end_time":"2025-02-10T17:23:36.985724","exception":false,"start_time":"2025-02-10T17:23:36.968976","status":"completed"},"tags":[]},"outputs":[],"source":["# Get the input dataset including the variables Open, High, Low and Closing Price of the past 5 days. \n","input = input.head(15)\n","X=input[['Open', 'High', 'Low', 'Price']]"]},{"cell_type":"code","execution_count":6,"id":"2e054950","metadata":{"execution":{"iopub.execute_input":"2025-02-10T17:23:36.997406Z","iopub.status.busy":"2025-02-10T17:23:36.997054Z","iopub.status.idle":"2025-02-10T17:23:37.002002Z","shell.execute_reply":"2025-02-10T17:23:37.000918Z"},"papermill":{"duration":0.012625,"end_time":"2025-02-10T17:23:37.004163","exception":false,"start_time":"2025-02-10T17:23:36.991538","status":"completed"},"tags":[]},"outputs":[],"source":["# Regression prediction using close price as the output.\n","Y=input['Price'].values"]},{"cell_type":"code","execution_count":7,"id":"e82c7fae","metadata":{"execution":{"iopub.execute_input":"2025-02-10T17:23:37.01443Z","iopub.status.busy":"2025-02-10T17:23:37.013744Z","iopub.status.idle":"2025-02-10T17:23:37.019927Z","shell.execute_reply":"2025-02-10T17:23:37.018849Z"},"papermill":{"duration":0.013709,"end_time":"2025-02-10T17:23:37.022089","exception":false,"start_time":"2025-02-10T17:23:37.00838","status":"completed"},"tags":[]},"outputs":[],"source":["# Input and output dataset split into training and testing datasets\n","X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)"]},{"cell_type":"code","execution_count":8,"id":"a912c283","metadata":{"execution":{"iopub.execute_input":"2025-02-10T17:23:37.031948Z","iopub.status.busy":"2025-02-10T17:23:37.031547Z","iopub.status.idle":"2025-02-10T17:23:37.042343Z","shell.execute_reply":"2025-02-10T17:23:37.041242Z"},"papermill":{"duration":0.018149,"end_time":"2025-02-10T17:23:37.044477","exception":false,"start_time":"2025-02-10T17:23:37.026328","status":"completed"},"tags":[]},"outputs":[],"source":["# Create machine learning model\n","poly = PolynomialFeatures(degree=3, include_bias=False)\n","# Create polynomial regression model\n","model2 = LinearRegression()\n","# Create training and testing datasets according to polynomial features\n","X_train_r = poly.fit_transform(X_train)\n","X_test_r = poly.fit_transform(X_test)"]},{"cell_type":"code","execution_count":9,"id":"9f2ba63d","metadata":{"execution":{"iopub.execute_input":"2025-02-10T17:23:37.054148Z","iopub.status.busy":"2025-02-10T17:23:37.053813Z","iopub.status.idle":"2025-02-10T17:23:37.079848Z","shell.execute_reply":"2025-02-10T17:23:37.078627Z"},"papermill":{"duration":0.033677,"end_time":"2025-02-10T17:23:37.082229","exception":false,"start_time":"2025-02-10T17:23:37.048552","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"],"text/plain":["LinearRegression()"]},"execution_count":9,"metadata":{},"output_type":"execute_result"}],"source":["# Train machine learning model\n","model2.fit(X_train_r,Y_train)"]},{"cell_type":"code","execution_count":10,"id":"c89ab099","metadata":{"execution":{"iopub.execute_input":"2025-02-10T17:23:37.092752Z","iopub.status.busy":"2025-02-10T17:23:37.092394Z","iopub.status.idle":"2025-02-10T17:23:37.098678Z","shell.execute_reply":"2025-02-10T17:23:37.097619Z"},"papermill":{"duration":0.014016,"end_time":"2025-02-10T17:23:37.100823","exception":false,"start_time":"2025-02-10T17:23:37.086807","status":"completed"},"tags":[]},"outputs":[],"source":["# Use trained model to predict testing dataset\n","Y2_pred_train = model2.predict(X_train_r)\n","Y2_pred_test = model2.predict(X_test_r)"]},{"cell_type":"code","execution_count":11,"id":"f2bc9523","metadata":{"execution":{"iopub.execute_input":"2025-02-10T17:23:37.111976Z","iopub.status.busy":"2025-02-10T17:23:37.110933Z","iopub.status.idle":"2025-02-10T17:23:37.393538Z","shell.execute_reply":"2025-02-10T17:23:37.39249Z"},"papermill":{"duration":0.290399,"end_time":"2025-02-10T17:23:37.395677","exception":false,"start_time":"2025-02-10T17:23:37.105278","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# Tweak using Matplotlib\n","Xplot=np.arange(0, np.size(Y_test))\n","plt.scatter(Xplot, Y_test, color=\"blue\", marker=\".\")\n","plt.plot(Xplot, Y2_pred_test, color=\"red\", linewidth=1)\n","plt.show()"]},{"cell_type":"code","execution_count":12,"id":"2cb0373f","metadata":{"execution":{"iopub.execute_input":"2025-02-10T17:23:37.40695Z","iopub.status.busy":"2025-02-10T17:23:37.406556Z","iopub.status.idle":"2025-02-10T17:23:37.412743Z","shell.execute_reply":"2025-02-10T17:23:37.411696Z"},"papermill":{"duration":0.014659,"end_time":"2025-02-10T17:23:37.415162","exception":false,"start_time":"2025-02-10T17:23:37.400503","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["[-7.56753707e-11  6.05293237e-11 -1.31096806e-11 -1.11070309e-10\n"," -4.27167389e-11  1.04717583e-10  6.89323446e-11  1.18915014e-10\n","  2.57945719e-10  2.18548068e-10  2.63673982e-10  1.69015070e-10\n","  2.19920054e-10  2.82961542e-10 -4.50872623e-08 -2.14286501e-08\n","  5.00685762e-08  4.92968385e-09 -1.71056022e-08  3.19390893e-08\n"," -3.75015433e-08  3.97514271e-08  1.18265686e-08  4.04534077e-08\n","  3.09787295e-08  7.00259454e-08 -6.73730025e-08  3.65830859e-08\n"," -3.48230612e-08 -3.87050151e-08 -5.50188284e-08 -4.93086406e-08\n"," -1.97682325e-08  7.55478212e-08]\n","4973.94271081007\n"]}],"source":["print(model2.coef_)\n","print(model2.intercept_)"]},{"cell_type":"code","execution_count":13,"id":"d279ef8a","metadata":{"execution":{"iopub.execute_input":"2025-02-10T17:23:37.426814Z","iopub.status.busy":"2025-02-10T17:23:37.426438Z","iopub.status.idle":"2025-02-10T17:23:37.434733Z","shell.execute_reply":"2025-02-10T17:23:37.433453Z"},"papermill":{"duration":0.016976,"end_time":"2025-02-10T17:23:37.437104","exception":false,"start_time":"2025-02-10T17:23:37.420128","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["1.0095391189679503e-11 0.6682072051033174 1.847094307830911e-22 0.6223232659428408\n"]}],"source":["MAE2_train=mean_absolute_error(Y_train, Y2_pred_train)\n","MAE2_test=mean_absolute_error(Y_test, Y2_pred_test)\n","MSE2_train=mean_squared_error(Y_train, Y2_pred_train)\n","MSE2_test=mean_squared_error(Y_test, Y2_pred_test)\n","print(MAE2_train,MAE2_test,MSE2_train,MSE2_test)"]},{"cell_type":"code","execution_count":14,"id":"332451e1","metadata":{"execution":{"iopub.execute_input":"2025-02-10T17:23:37.449926Z","iopub.status.busy":"2025-02-10T17:23:37.448702Z","iopub.status.idle":"2025-02-10T17:23:37.455432Z","shell.execute_reply":"2025-02-10T17:23:37.454241Z"},"papermill":{"duration":0.015907,"end_time":"2025-02-10T17:23:37.458199","exception":false,"start_time":"2025-02-10T17:23:37.442292","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["1.0\n"]}],"source":["train_score = model2.score(X_train_r,Y2_pred_train)\n","print(train_score)"]},{"cell_type":"code","execution_count":15,"id":"b0a2be59","metadata":{"execution":{"iopub.execute_input":"2025-02-10T17:23:37.4716Z","iopub.status.busy":"2025-02-10T17:23:37.470676Z","iopub.status.idle":"2025-02-10T17:23:37.477643Z","shell.execute_reply":"2025-02-10T17:23:37.476498Z"},"papermill":{"duration":0.016178,"end_time":"2025-02-10T17:23:37.480218","exception":false,"start_time":"2025-02-10T17:23:37.46404","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["1.0\n"]}],"source":["test_score = model2.score(X_test_r,Y2_pred_test)\n","print(test_score)"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[{"datasetId":4229183,"sourceId":7291902,"sourceType":"datasetVersion"}],"dockerImageVersionId":30626,"isGpuEnabled":false,"isInternetEnabled":false,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.12"},"papermill":{"default_parameters":{},"duration":7.711741,"end_time":"2025-02-10T17:23:38.107192","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2025-02-10T17:23:30.395451","version":"2.3.4"}},"nbformat":4,"nbformat_minor":5}