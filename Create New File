{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/alicedav/polynomialpredictionmodel-ipynb?scriptVersionId=221843015\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","id":"735e53be","metadata":{"papermill":{"duration":0.004201,"end_time":"2025-02-10T18:19:37.803908","exception":false,"start_time":"2025-02-10T18:19:37.799707","status":"completed"},"tags":[]},"source":["* Module Name: Financial Technology\n","* Task Title: A simple machine learning-based prediction model\n","* Dataset: FTSE 100 Historical Data.csv"]},{"cell_type":"markdown","id":"045fca91","metadata":{"papermill":{"duration":0.003473,"end_time":"2025-02-10T18:19:37.811428","exception":false,"start_time":"2025-02-10T18:19:37.807955","status":"completed"},"tags":[]},"source":["# A Simple Polynomial Machine Learning-Based Prediction Model"]},{"cell_type":"code","execution_count":1,"id":"d9427ea6","metadata":{"execution":{"iopub.execute_input":"2025-02-10T18:19:37.820691Z","iopub.status.busy":"2025-02-10T18:19:37.820258Z","iopub.status.idle":"2025-02-10T18:19:40.707608Z","shell.execute_reply":"2025-02-10T18:19:40.70664Z"},"papermill":{"duration":2.89493,"end_time":"2025-02-10T18:19:40.710047","exception":false,"start_time":"2025-02-10T18:19:37.815117","status":"completed"},"tags":[]},"outputs":[],"source":["# Import packages used by this programme\n","import numpy as np\n","import pandas as pd\n","#import seaborn as sns\n","import matplotlib.pyplot as plt\n","from sklearn.linear_model import LinearRegression\n","from sklearn.preprocessing import PolynomialFeatures\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import mean_absolute_error,mean_squared_error"]},{"cell_type":"code","execution_count":2,"id":"b442767c","metadata":{"execution":{"iopub.execute_input":"2025-02-10T18:19:40.720162Z","iopub.status.busy":"2025-02-10T18:19:40.719689Z","iopub.status.idle":"2025-02-10T18:19:40.840577Z","shell.execute_reply":"2025-02-10T18:19:40.83962Z"},"papermill":{"duration":0.129161,"end_time":"2025-02-10T18:19:40.843249","exception":false,"start_time":"2025-02-10T18:19:40.714088","status":"completed"},"tags":[]},"outputs":[],"source":["# Upload csv file of historical price of FTSE100, import it into workspace, and read it as dataframe (df)\n","df = pd.read_csv('/kaggle/input/ftse-100-historical-data/FTSE 100 Historical Data (1).csv', thousands = ',') #read data from csv file"]},{"cell_type":"code","execution_count":3,"id":"3b09b298","metadata":{"execution":{"iopub.execute_input":"2025-02-10T18:19:40.853239Z","iopub.status.busy":"2025-02-10T18:19:40.852875Z","iopub.status.idle":"2025-02-10T18:19:40.881833Z","shell.execute_reply":"2025-02-10T18:19:40.880652Z"},"papermill":{"duration":0.036759,"end_time":"2025-02-10T18:19:40.884155","exception":false,"start_time":"2025-02-10T18:19:40.847396","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Price</th>\n","      <th>Open</th>\n","      <th>High</th>\n","      <th>Low</th>\n","      <th>Vol.</th>\n","      <th>Change %</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>05/12/2023</td>\n","      <td>7479.16</td>\n","      <td>7469.04</td>\n","      <td>7500.96</td>\n","      <td>7459.69</td>\n","      <td>NaN</td>\n","      <td>-0.45%</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>04/12/2023</td>\n","      <td>7512.96</td>\n","      <td>7529.35</td>\n","      <td>7533.81</td>\n","      <td>7476.85</td>\n","      <td>818.38M</td>\n","      <td>-0.22%</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>01/12/2023</td>\n","      <td>7529.35</td>\n","      <td>7453.75</td>\n","      <td>7538.71</td>\n","      <td>7453.75</td>\n","      <td>549.09M</td>\n","      <td>1.01%</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>30/11/2023</td>\n","      <td>7453.75</td>\n","      <td>7423.46</td>\n","      <td>7497.68</td>\n","      <td>7387.09</td>\n","      <td>1.27B</td>\n","      <td>0.41%</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>29/11/2023</td>\n","      <td>7423.46</td>\n","      <td>7455.24</td>\n","      <td>7457.48</td>\n","      <td>7408.79</td>\n","      <td>531.53M</td>\n","      <td>-0.43%</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>28/11/2023</td>\n","      <td>7455.24</td>\n","      <td>7460.70</td>\n","      <td>7461.13</td>\n","      <td>7403.25</td>\n","      <td>599.93M</td>\n","      <td>-0.07%</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>27/11/2023</td>\n","      <td>7460.70</td>\n","      <td>7488.20</td>\n","      <td>7488.26</td>\n","      <td>7452.18</td>\n","      <td>398.90M</td>\n","      <td>-0.37%</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>24/11/2023</td>\n","      <td>7488.20</td>\n","      <td>7483.58</td>\n","      <td>7494.72</td>\n","      <td>7450.12</td>\n","      <td>528.51M</td>\n","      <td>0.06%</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>23/11/2023</td>\n","      <td>7483.58</td>\n","      <td>7469.51</td>\n","      <td>7494.77</td>\n","      <td>7450.60</td>\n","      <td>607.42M</td>\n","      <td>0.19%</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>22/11/2023</td>\n","      <td>7469.51</td>\n","      <td>7481.99</td>\n","      <td>7504.51</td>\n","      <td>7452.00</td>\n","      <td>627.38M</td>\n","      <td>-0.17%</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         Date    Price     Open     High      Low     Vol. Change %\n","0  05/12/2023  7479.16  7469.04  7500.96  7459.69      NaN   -0.45%\n","1  04/12/2023  7512.96  7529.35  7533.81  7476.85  818.38M   -0.22%\n","2  01/12/2023  7529.35  7453.75  7538.71  7453.75  549.09M    1.01%\n","3  30/11/2023  7453.75  7423.46  7497.68  7387.09    1.27B    0.41%\n","4  29/11/2023  7423.46  7455.24  7457.48  7408.79  531.53M   -0.43%\n","5  28/11/2023  7455.24  7460.70  7461.13  7403.25  599.93M   -0.07%\n","6  27/11/2023  7460.70  7488.20  7488.26  7452.18  398.90M   -0.37%\n","7  24/11/2023  7488.20  7483.58  7494.72  7450.12  528.51M    0.06%\n","8  23/11/2023  7483.58  7469.51  7494.77  7450.60  607.42M    0.19%\n","9  22/11/2023  7469.51  7481.99  7504.51  7452.00  627.38M   -0.17%"]},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":["# Check how df looks by reading the first 10 rows\n","df.head(10)"]},{"cell_type":"code","execution_count":4,"id":"0e3433d1","metadata":{"execution":{"iopub.execute_input":"2025-02-10T18:19:40.894159Z","iopub.status.busy":"2025-02-10T18:19:40.893769Z","iopub.status.idle":"2025-02-10T18:19:40.916781Z","shell.execute_reply":"2025-02-10T18:19:40.915754Z"},"papermill":{"duration":0.030747,"end_time":"2025-02-10T18:19:40.919203","exception":false,"start_time":"2025-02-10T18:19:40.888456","status":"completed"},"tags":[]},"outputs":[],"source":["# Remove duplicated rows\n","unique_rows = df.drop_duplicates()\n","# Remove any rows which contain missing values\n","input = unique_rows.dropna(axis=0)"]},{"cell_type":"code","execution_count":5,"id":"6186397d","metadata":{"execution":{"iopub.execute_input":"2025-02-10T18:19:40.929149Z","iopub.status.busy":"2025-02-10T18:19:40.928763Z","iopub.status.idle":"2025-02-10T18:19:40.93693Z","shell.execute_reply":"2025-02-10T18:19:40.935828Z"},"papermill":{"duration":0.015793,"end_time":"2025-02-10T18:19:40.939155","exception":false,"start_time":"2025-02-10T18:19:40.923362","status":"completed"},"tags":[]},"outputs":[],"source":["# Get the input dataset including the variables Open, High, Low and Closing Price of the past 5 days. \n","input = input.head(15)\n","X=input[['Open', 'High', 'Low', 'Price']]"]},{"cell_type":"code","execution_count":6,"id":"a0b84b67","metadata":{"execution":{"iopub.execute_input":"2025-02-10T18:19:40.94925Z","iopub.status.busy":"2025-02-10T18:19:40.948889Z","iopub.status.idle":"2025-02-10T18:19:40.953739Z","shell.execute_reply":"2025-02-10T18:19:40.952765Z"},"papermill":{"duration":0.012248,"end_time":"2025-02-10T18:19:40.955761","exception":false,"start_time":"2025-02-10T18:19:40.943513","status":"completed"},"tags":[]},"outputs":[],"source":["# Regression prediction using close price as the output.\n","Y=input['Price'].values"]},{"cell_type":"code","execution_count":7,"id":"192cfaae","metadata":{"execution":{"iopub.execute_input":"2025-02-10T18:19:40.965686Z","iopub.status.busy":"2025-02-10T18:19:40.965298Z","iopub.status.idle":"2025-02-10T18:19:40.971741Z","shell.execute_reply":"2025-02-10T18:19:40.970584Z"},"papermill":{"duration":0.013783,"end_time":"2025-02-10T18:19:40.973897","exception":false,"start_time":"2025-02-10T18:19:40.960114","status":"completed"},"tags":[]},"outputs":[],"source":["# Input and output dataset split into training and testing datasets\n","X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3)"]},{"cell_type":"code","execution_count":8,"id":"7401f179","metadata":{"execution":{"iopub.execute_input":"2025-02-10T18:19:40.984398Z","iopub.status.busy":"2025-02-10T18:19:40.983261Z","iopub.status.idle":"2025-02-10T18:19:40.994846Z","shell.execute_reply":"2025-02-10T18:19:40.993484Z"},"papermill":{"duration":0.018842,"end_time":"2025-02-10T18:19:40.99699","exception":false,"start_time":"2025-02-10T18:19:40.978148","status":"completed"},"tags":[]},"outputs":[],"source":["# Create machine learning model\n","poly = PolynomialFeatures(degree=3, include_bias=False)\n","# Create polynomial regression model\n","model2 = LinearRegression()\n","# Create training and testing datasets according to polynomial features\n","X_train_r = poly.fit_transform(X_train)\n","X_test_r = poly.fit_transform(X_test)"]},{"cell_type":"code","execution_count":9,"id":"a30f10a5","metadata":{"execution":{"iopub.execute_input":"2025-02-10T18:19:41.006979Z","iopub.status.busy":"2025-02-10T18:19:41.00658Z","iopub.status.idle":"2025-02-10T18:19:41.039873Z","shell.execute_reply":"2025-02-10T18:19:41.03874Z"},"papermill":{"duration":0.041356,"end_time":"2025-02-10T18:19:41.042458","exception":false,"start_time":"2025-02-10T18:19:41.001102","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"],"text/plain":["LinearRegression()"]},"execution_count":9,"metadata":{},"output_type":"execute_result"}],"source":["# Train machine learning model\n","model2.fit(X_train_r,Y_train)"]},{"cell_type":"code","execution_count":10,"id":"f85ac9e1","metadata":{"execution":{"iopub.execute_input":"2025-02-10T18:19:41.053119Z","iopub.status.busy":"2025-02-10T18:19:41.052739Z","iopub.status.idle":"2025-02-10T18:19:41.058708Z","shell.execute_reply":"2025-02-10T18:19:41.057571Z"},"papermill":{"duration":0.01404,"end_time":"2025-02-10T18:19:41.061067","exception":false,"start_time":"2025-02-10T18:19:41.047027","status":"completed"},"tags":[]},"outputs":[],"source":["# Use trained model to predict testing dataset\n","Y2_pred_train = model2.predict(X_train_r)\n","Y2_pred_test = model2.predict(X_test_r)"]},{"cell_type":"code","execution_count":11,"id":"cc30a795","metadata":{"execution":{"iopub.execute_input":"2025-02-10T18:19:41.071624Z","iopub.status.busy":"2025-02-10T18:19:41.071209Z","iopub.status.idle":"2025-02-10T18:19:41.294784Z","shell.execute_reply":"2025-02-10T18:19:41.293259Z"},"papermill":{"duration":0.231865,"end_time":"2025-02-10T18:19:41.297438","exception":false,"start_time":"2025-02-10T18:19:41.065573","status":"completed"},"tags":[]},"outputs":[{"data":{"image/png":"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wUsvvQQA6NevH1xdXREaGorjx49jzZo1mDlzJsaOHWuO89W+5cuBq1eBUaNUJyEiIlLG6AJmx44dOHfuHEJCQox+sXr16uHrr79GamoqAgMD0aZNG1y8eBHbtm0zLLn28vLCd999hzNnzqB58+YYN24cPvzwQy6hBv5uXNerF/DUU6rTEBERKaMTQgjVISxBr9fDy8sLWVlZ8PT0VB3HPLZuBbp3B/77X+DFF1WnISIiMruSfn5zLyQtiY4GWrQAXnhBdRIiIiKluAZXK44eBXbskMun2biOiIgcHEdgtCImBvD3B15/XXUSIiIi5VjAaEFmJrBypWxcV6aM6jRERETKsYDRgnnzZOEydKjqJERERDaBBYytK2hc9847ABv5ERERAWABY/tWrgSuXGHjOiIiovuwgLFlQsjJu6+8AtSurToNERGRzeAyalv23XfAL7/IS0hERERkwBEYWxYdDTRrBrRpozoJERGRTeEIjK06dkyOwKxYwcZ1RERED+AIjK2KjQX8/IA+fVQnISIisjksYGzR5cty5GXECMDVVXUaIiIim8MCxhbNnw84OwNhYaqTEBER2SQWMLbm7l3ZeXfwYKBSJdVpiIiIbBILGFuzapW8hMTGdURERMViAWNLChrX9egB1KmjOg0REZHN4jJqW7Jjh1w+PXu26iREREQ2jSMwtiQmBmjaFGjXTnUSIiIim8YRGFtx4gSwdSuwbBkb1xERET0GR2BsRWws4OsL9O2rOgkREZHNYwFjC65ckSMv77/PxnVEREQlwALGFixYIC8bvfuu6iRERESawAJGtexsYM4cYNAg4MknVachIiLSBBYwqn35JZCZCYwerToJERGRZrCAUamgcV1wMFC3ruo0REREmsECRqWkJCA1FRgzRnUSIiIiTWEBo1JMDNC4MdChg+okREREmsJGdqr8+iuwZQsQH8/GdUREREbiCIwqM2cC3t7AW2+pTkJERKQ5LGBU+N//gC++AMLDATc31WmIiIg0hwWMCgsXyhVIw4apTkJERKRJLGCsLSdHNq4bOBCoUkV1GiIiIk1iAWNta9YAly6xcR0REVEpsICxJiGA6GigWzegfn3VaYiIiDSLBYw17dkDpKSwcR0REVEpsYCxpuhooGFDoFMn1UmIiIg0jY3srOW334Cvvwbi4ti4joiIqJQ4AmMtM2cCVasC/fqp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","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{},"output_type":"display_data"}],"source":["# Tweak using Matplotlib\n","Xplot=np.arange(0, np.size(Y_test))\n","plt.scatter(Xplot, Y_test, color=\"blue\", marker=\".\")\n","plt.plot(Xplot, Y2_pred_test, color=\"red\", linewidth=1)\n","plt.show()"]},{"cell_type":"code","execution_count":12,"id":"bb473782","metadata":{"execution":{"iopub.execute_input":"2025-02-10T18:19:41.309541Z","iopub.status.busy":"2025-02-10T18:19:41.309051Z","iopub.status.idle":"2025-02-10T18:19:41.315774Z","shell.execute_reply":"2025-02-10T18:19:41.314642Z"},"papermill":{"duration":0.015496,"end_time":"2025-02-10T18:19:41.318188","exception":false,"start_time":"2025-02-10T18:19:41.302692","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["[-6.57404760e-11  8.24851852e-12 -2.92433465e-11  4.88745945e-11\n"," -2.18546054e-11 -9.87088678e-12 -2.01835794e-11  8.01610861e-12\n","  9.07074146e-13 -6.59994443e-12  1.88610532e-11 -1.50393741e-11\n","  9.47515180e-12  3.73540462e-11 -6.71638592e-09 -7.29135936e-10\n"," -1.37675493e-08  1.70331791e-08 -8.99058408e-09  1.27987514e-08\n","  1.80661917e-08 -1.65338976e-08 -9.85314134e-09  1.92970659e-08\n"," -9.55749237e-09  2.05680595e-09 -1.67170540e-09  2.57082993e-08\n"," -7.92785887e-09 -1.17538550e-09  2.53868025e-08 -2.61852401e-08\n"," -2.51674087e-08  1.39573765e-08]\n","4956.602651689425\n"]}],"source":["print(model2.coef_)\n","print(model2.intercept_)"]},{"cell_type":"code","execution_count":13,"id":"b724b3b8","metadata":{"execution":{"iopub.execute_input":"2025-02-10T18:19:41.33055Z","iopub.status.busy":"2025-02-10T18:19:41.329355Z","iopub.status.idle":"2025-02-10T18:19:41.337623Z","shell.execute_reply":"2025-02-10T18:19:41.336214Z"},"papermill":{"duration":0.016729,"end_time":"2025-02-10T18:19:41.339908","exception":false,"start_time":"2025-02-10T18:19:41.323179","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["1.2732925824820995e-12 0.43701704890700055 2.3161057151484773e-24 0.31355412829710244\n"]}],"source":["MAE2_train=mean_absolute_error(Y_train, Y2_pred_train)\n","MAE2_test=mean_absolute_error(Y_test, Y2_pred_test)\n","MSE2_train=mean_squared_error(Y_train, Y2_pred_train)\n","MSE2_test=mean_squared_error(Y_test, Y2_pred_test)\n","print(MAE2_train,MAE2_test,MSE2_train,MSE2_test)"]},{"cell_type":"code","execution_count":14,"id":"0fb060af","metadata":{"execution":{"iopub.execute_input":"2025-02-10T18:19:41.35129Z","iopub.status.busy":"2025-02-10T18:19:41.350892Z","iopub.status.idle":"2025-02-10T18:19:41.358156Z","shell.execute_reply":"2025-02-10T18:19:41.356978Z"},"papermill":{"duration":0.015549,"end_time":"2025-02-10T18:19:41.360455","exception":false,"start_time":"2025-02-10T18:19:41.344906","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["1.0\n"]}],"source":["train_score = model2.score(X_train_r,Y2_pred_train)\n","print(train_score)"]},{"cell_type":"code","execution_count":15,"id":"c43b3393","metadata":{"execution":{"iopub.execute_input":"2025-02-10T18:19:41.372076Z","iopub.status.busy":"2025-02-10T18:19:41.371706Z","iopub.status.idle":"2025-02-10T18:19:41.378123Z","shell.execute_reply":"2025-02-10T18:19:41.377093Z"},"papermill":{"duration":0.014989,"end_time":"2025-02-10T18:19:41.380516","exception":false,"start_time":"2025-02-10T18:19:41.365527","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["1.0\n"]}],"source":["test_score = model2.score(X_test_r,Y2_pred_test)\n","print(test_score)"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[{"datasetId":4229183,"sourceId":7291902,"sourceType":"datasetVersion"}],"dockerImageVersionId":30626,"isGpuEnabled":false,"isInternetEnabled":false,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.12"},"papermill":{"default_parameters":{},"duration":8.494175,"end_time":"2025-02-10T18:19:42.006721","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2025-02-10T18:19:33.512546","version":"2.3.4"}},"nbformat":4,"nbformat_minor":5}